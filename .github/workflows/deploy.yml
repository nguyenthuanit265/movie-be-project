name: Deploy to Production

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      DOCKER_IMAGE: nguyenthuanit265/movie-be-project

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Build with Maven
        env:
          MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
          MAIL_PASSWORD: "${{ secrets.MAIL_PASSWORD }}"
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          TMDB_BEARER_TOKEN: ${{ secrets.TMDB_BEARER_TOKEN }}
        run: mvn clean package -DskipTests

      - name: Create application.yml
        run: |
          mkdir -p src/main/resources
          cat > src/main/resources/application.yml << EOF
          server:
            port: 8081
          spring:
            jackson:
              property-naming-strategy: SNAKE_CASE
            mail:
              host: smtp.gmail.com
              port: 587
              username: ${{ secrets.MAIL_USERNAME }}
              password: "${{ secrets.MAIL_PASSWORD }}"
              properties:
                mail:
                  smtp:
                    auth: true
                    starttls:
                      enable: true
            security:
              oauth2:
                client:
                  registration:
                    google:
                      client-id: YOUR_CLIENT_ID
                      client-secret: YOUR_CLIENT_SECRET
                      redirect-uri: "{baseUrl}/oauth2/callback/{registrationId}"
                      scope:
                        - email
                        - profile
            application:
              name: movie-be-project
            flyway:
              enabled: false
              locations: classpath:db/migration
              baseline-on-migrate: false
            datasource:
              url: jdbc:postgresql://${{ secrets.DB_HOST }}:5432/${{ secrets.DB_NAME }}
              username: ${{ secrets.DB_USERNAME }}
              password: ${{ secrets.DB_PASSWORD }}
              driver-class-name: org.postgresql.Driver
              hikari:
                maximum-pool-size: 10
                minimum-idle: 5
                idle-timeout: 300000
                connection-timeout: 20000
                connection-test-query: SELECT 1
            jpa:
              show-sql: false
              open-in-view: false
              hibernate:
                ddl-auto: none
                naming:
                  physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
              properties:
                hibernate:
                  dialect: org.hibernate.dialect.PostgreSQLDialect
                  format_sql: true
                  globally_quoted_identifiers: true
                  generate_statistics: true
                  jdbc:
                    batch_size: 100
                  cache:
                    use_second_level_cache: false
          
          app:
            tmdb:
              url: https://api.themoviedb.org/3
              token: ${{ secrets.TMDB_BEARER_TOKEN }}
          
          logging:
            level:
              root: INFO
              org:
                springframework:
                  security: INFO
                hibernate:
                  SQL: INFO
                  type:
                    descriptor:
                      sql:
                        BasicBinder: INFO
          EOF

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        run: |
          docker build -t nguyenthuanit265/movie-be-project:latest .
          docker push nguyenthuanit265/movie-be-project:latest

      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker pull nguyenthuanit265/movie-be-project:latest
            
            docker stop movie-be-project || true
            docker rm movie-be-project || true
            
            docker run -d --name movie-be-project -p 8081:8081 -e SPRING_DATASOURCE_URL="jdbc:postgresql://${{ secrets.DB_HOST }}:5432/${{ secrets.DB_NAME }}" -e SPRING_DATASOURCE_USERNAME=${{ secrets.DB_USERNAME }} -e SPRING_DATASOURCE_PASSWORD=${{ secrets.DB_PASSWORD }} -e SPRING_MAIL_USERNAME=${{ secrets.MAIL_USERNAME }} -e SPRING_MAIL_PASSWORD="${{ secrets.MAIL_PASSWORD }}" -e APP_TMDB_TOKEN="${{ secrets.TMDB_BEARER_TOKEN }}" nguyenthuanit265/movie-be-project:latest            
            sleep 15
            echo "Container Logs:"
            docker logs movie-be-project